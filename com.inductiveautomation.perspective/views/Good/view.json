{
  "custom": {
    "DBConnection": null,
    "IdealQuantityValue": 3495.0999999999985,
    "LoLimitValue": 80,
    "LoLoLimitValue": 70,
    "ShiftParam": null,
    "data": {
      "$": [
        "ds",
        192,
        1660751775391
      ],
      "$columns": [
        {
          "data": [
            1659351600000,
            1659355200000,
            1659358800000,
            1659362400000,
            1659366000000,
            1659369600000,
            1659373200000,
            1659376800000,
            1659380400000,
            1659384000000,
            1659391200000,
            1659394800000,
            1659398400000,
            1659402000000,
            1659405600000,
            1659438000000,
            1659441600000,
            1659445200000,
            1659448800000,
            1659452400000,
            1659456000000,
            1659459600000,
            1659463200000,
            1659474000000,
            1659524400000,
            1659528000000,
            1659531600000,
            1659535200000,
            1659614400000,
            1659621600000,
            1659625200000,
            1659628800000,
            1659704400000,
            1659708000000,
            1659711600000,
            1659715200000,
            1659718800000,
            1659722400000,
            1659726000000,
            1659729600000,
            1659733200000,
            1659736800000,
            1659744000000,
            1659751200000,
            1659956400000,
            1659960000000,
            1659963600000,
            1659967200000,
            1659970800000,
            1659974400000,
            1659978000000,
            1659981600000,
            1659985200000,
            1659988800000,
            1659992400000,
            1659996000000,
            1659999600000,
            1660003200000,
            1660006800000,
            1660010400000,
            1660042800000,
            1660046400000,
            1660050000000,
            1660053600000,
            1660057200000,
            1660060800000,
            1660064400000,
            1660068000000,
            1660071600000,
            1660075200000,
            1660078800000,
            1660082400000,
            1660086000000,
            1660089600000,
            1660093200000,
            1660096800000,
            1660129200000,
            1660132800000,
            1660136400000,
            1660140000000,
            1660143600000,
            1660147200000,
            1660150800000,
            1660154400000,
            1660158000000,
            1660161600000,
            1660165200000,
            1660168800000,
            1660172400000,
            1660176000000,
            1660179600000,
            1660183200000,
            1660215600000,
            1660219200000,
            1660222800000,
            1660226400000,
            1660230000000,
            1660233600000,
            1660237200000,
            1660248000000,
            1660258800000,
            1660262400000,
            1660266000000,
            1660269600000,
            1660302000000,
            1660305600000,
            1660309200000,
            1660312800000,
            1660316400000,
            1660320000000,
            1660323600000,
            1660327200000,
            1660330800000,
            1660341600000,
            1660352400000,
            1660356000000,
            1660561200000,
            1660568400000,
            1660572000000,
            1660575600000,
            1660579200000,
            1660582800000,
            1660586400000,
            1660604400000,
            1660608000000,
            1660611600000,
            1660615200000,
            1660647600000,
            1660651200000,
            1660654800000,
            1660658400000,
            1660662000000,
            1660665600000,
            1660669200000,
            1660672800000,
            1660676400000,
            1660680000000,
            1660683600000,
            1660687200000,
            1660690800000,
            1660698000000,
            1660701600000,
            1660734000000,
            1660737600000,
            1660741200000,
            1660744800000,
            1660748400000
          ],
          "name": "Hour",
          "type": "Date"
        },
        {
          "data": [
            60,
            40,
            60,
            60,
            30,
            60,
            60,
            60,
            60,
            60,
            30,
            60,
            50,
            50,
            60,
            60,
            40,
            60,
            60,
            30,
            60,
            60,
            60,
            60,
            60,
            40,
            60,
            60,
            40,
            60,
            30,
            60,
            60,
            60,
            30,
            60,
            60,
            60,
            60,
            60,
            60,
            30,
            50,
            60,
            60,
            40,
            60,
            60,
            30,
            60,
            60,
            60,
            60,
            60,
            60,
            30,
            60,
            50,
            50,
            60,
            60,
            40,
            60,
            60,
            30,
            60,
            60,
            60,
            60,
            60,
            60,
            30,
            60,
            50,
            50,
            60,
            60,
            40,
            60,
            60,
            30,
            60,
            60,
            60,
            60,
            60,
            60,
            30,
            60,
            50,
            50,
            60,
            60,
            40,
            60,
            60,
            30,
            60,
            60,
            60,
            60,
            50,
            50,
            60,
            60,
            40,
            60,
            60,
            30,
            60,
            60,
            60,
            60,
            30,
            50,
            60,
            60,
            60,
            60,
            30,
            60,
            60,
            60,
            60,
            50,
            50,
            60,
            60,
            40,
            60,
            60,
            30,
            60,
            60,
            60,
            60,
            60,
            60,
            30,
            60,
            50,
            60,
            60,
            40,
            60,
            60,
            26
          ],
          "name": "ResourceTarget_MinutesWorked",
          "type": "Double"
        },
        {
          "data": [
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20
          ],
          "name": "Ideal Cycle Time (sec/Part)",
          "type": "Double"
        },
        {
          "data": [
            58,
            48,
            47,
            55,
            45,
            45,
            44,
            42,
            0,
            0,
            46,
            46,
            66,
            31,
            110,
            53,
            48,
            46,
            39,
            59,
            55,
            56,
            57,
            0,
            62,
            52,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            61,
            50,
            50,
            56,
            52,
            52,
            47,
            46,
            39,
            47,
            53,
            657,
            53,
            57,
            50,
            55,
            49,
            52,
            49,
            45,
            130,
            47,
            59,
            55,
            52,
            48,
            45,
            43,
            45,
            40,
            52,
            46,
            47,
            57,
            47,
            52,
            46,
            168,
            54,
            49,
            41,
            49,
            51,
            38,
            43,
            0,
            67,
            57,
            45,
            0,
            49,
            51,
            29,
            51,
            42,
            51,
            46,
            53,
            77,
            0,
            0,
            0,
            50,
            49,
            48,
            49,
            0,
            38,
            37,
            90,
            136,
            47,
            66,
            69,
            56,
            67,
            49,
            46,
            0,
            137,
            50,
            62,
            49,
            68,
            75,
            46,
            47,
            45,
            47,
            41,
            59,
            39,
            59
          ],
          "name": "Actual Cycle Time (sec/Part)",
          "type": "Double"
        },
        {
          "data": [
            34.48,
            41.67,
            42.55,
            36.36,
            44.44,
            44.44,
            45.45,
            47.62,
            0,
            0,
            43.48,
            43.48,
            30.3,
            64.52,
            18.18,
            37.74,
            41.67,
            43.48,
            51.28,
            33.9,
            36.36,
            35.71,
            35.09,
            0,
            32.26,
            38.46,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            32.79,
            40,
            40,
            35.71,
            38.46,
            38.46,
            42.55,
            43.48,
            51.28,
            42.55,
            37.74,
            3.04,
            37.74,
            35.09,
            40,
            36.36,
            40.82,
            38.46,
            40.82,
            44.44,
            15.38,
            42.55,
            33.9,
            36.36,
            38.46,
            41.67,
            44.44,
            46.51,
            44.44,
            50,
            38.46,
            43.48,
            42.55,
            35.09,
            42.55,
            38.46,
            43.48,
            11.9,
            37.04,
            40.82,
            48.78,
            40.82,
            39.22,
            52.63,
            46.51,
            0,
            29.85,
            35.09,
            44.44,
            0,
            40.82,
            39.22,
            68.97,
            39.22,
            47.62,
            39.22,
            43.48,
            37.74,
            25.97,
            0,
            0,
            0,
            40,
            40.82,
            41.67,
            40.82,
            0,
            52.63,
            54.05,
            22.22,
            14.71,
            42.55,
            30.3,
            28.99,
            35.71,
            29.85,
            40.82,
            43.48,
            0,
            14.6,
            40,
            32.26,
            40.82,
            29.41,
            26.67,
            43.48,
            42.55,
            44.44,
            42.55,
            48.78,
            33.9,
            51.28,
            33.9
          ],
          "name": "Performance (Pct)",
          "type": "Double"
        },
        {
          "data": [
            32.2,
            33.95,
            30.95,
            5.5,
            22.9,
            29.7,
            4.45,
            21.4,
            0,
            0,
            11.55,
            55.35,
            6.6,
            3.1,
            16.6,
            37.65,
            33.7,
            30,
            5.9,
            26.6,
            11.05,
            54.05,
            37.2,
            0,
            53.1,
            44.4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            27.45,
            15.25,
            42.75,
            33.95,
            13.05,
            33.85,
            40.45,
            30.35,
            19.9,
            57.5,
            64.05,
            197.1,
            53.95,
            40.35,
            32.9,
            38.9,
            34.6,
            21.15,
            49.4,
            31.65,
            84.75,
            40.75,
            56.55,
            46.8,
            33.85,
            7.25,
            45.4,
            17.45,
            38.8,
            16.2,
            18.25,
            48.5,
            50.35,
            17.1,
            45.3,
            36.45,
            34.95,
            25.2,
            38.15,
            41.65,
            20.75,
            19.65,
            46.1,
            40.45,
            8.75,
            0,
            47.2,
            43.15,
            33.75,
            0,
            19.65,
            25.85,
            4.45,
            12.9,
            25.65,
            23.1,
            54,
            48.2,
            50.35,
            0,
            0,
            0,
            12.55,
            2.45,
            14.4,
            9.8,
            0,
            13.45,
            7.4,
            18.15,
            27.2,
            21.55,
            36.5,
            10.35,
            33.95,
            13.55,
            14.9,
            27.65,
            0,
            48.15,
            22.7,
            40.45,
            39.8,
            61.95,
            33.85,
            32.6,
            23.9,
            27,
            16.6,
            16.45,
            29.55,
            21.7,
            62.45
          ],
          "name": "IdealPartCount",
          "type": "Double"
        },
        {
          "data": [
            11,
            14,
            13,
            2,
            10,
            13,
            2,
            10,
            0,
            0,
            5,
            24,
            2,
            2,
            3,
            14,
            14,
            13,
            3,
            9,
            4,
            19,
            13,
            0,
            17,
            17,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            6,
            17,
            12,
            5,
            13,
            17,
            13,
            10,
            24,
            24,
            6,
            20,
            14,
            13,
            14,
            14,
            8,
            20,
            14,
            13,
            17,
            19,
            17,
            13,
            3,
            20,
            8,
            17,
            8,
            7,
            21,
            21,
            6,
            19,
            14,
            15,
            3,
            14,
            17,
            10,
            8,
            18,
            21,
            4,
            0,
            14,
            15,
            15,
            0,
            8,
            10,
            3,
            5,
            12,
            9,
            23,
            18,
            13,
            0,
            0,
            0,
            5,
            1,
            6,
            4,
            1,
            7,
            4,
            4,
            4,
            9,
            11,
            3,
            12,
            4,
            6,
            12,
            0,
            7,
            9,
            13,
            16,
            18,
            9,
            14,
            10,
            12,
            7,
            8,
            10,
            11,
            21
          ],
          "name": "TotalPartCount",
          "type": "Long"
        },
        {
          "data": [
            11,
            14,
            13,
            2,
            10,
            13,
            2,
            10,
            0,
            0,
            5,
            24,
            2,
            2,
            3,
            14,
            14,
            13,
            3,
            9,
            4,
            19,
            13,
            0,
            16,
            17,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            9,
            6,
            17,
            12,
            5,
            13,
            17,
            13,
            10,
            23,
            24,
            6,
            20,
            14,
            13,
            14,
            14,
            8,
            20,
            14,
            13,
            17,
            19,
            17,
            13,
            3,
            20,
            8,
            17,
            8,
            7,
            21,
            21,
            6,
            19,
            14,
            15,
            3,
            14,
            17,
            10,
            8,
            18,
            21,
            4,
            0,
            14,
            15,
            15,
            0,
            8,
            10,
            3,
            5,
            12,
            9,
            23,
            18,
            13,
            0,
            0,
            0,
            5,
            1,
            6,
            4,
            1,
            7,
            4,
            4,
            4,
            9,
            11,
            3,
            12,
            4,
            6,
            12,
            0,
            7,
            9,
            13,
            16,
            18,
            9,
            14,
            10,
            12,
            7,
            8,
            10,
            11,
            21
          ],
          "name": "GoodPartCount",
          "type": "Long"
        },
        {
          "data": [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          "name": "FailedPartCount",
          "type": "Long"
        },
        {
          "data": [
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98,
            98
          ],
          "name": "YieldTarget (Pct)",
          "type": "Double"
        },
        {
          "data": [
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            94.12,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            95.83,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100,
            100
          ],
          "name": "Yield (Pct)",
          "type": "Double"
        }
      ]
    },
    "limitsOEE": {
      "$": [
        "ds",
        192,
        1660751367786
      ],
      "$columns": [
        {
          "data": [
            80
          ],
          "name": "OEELowThreshold",
          "type": "Double"
        },
        {
          "data": [
            70
          ],
          "name": "OEELowLowThreshold",
          "type": "Double"
        },
        {
          "data": [
            80
          ],
          "name": "AvailabilityLowThreshold",
          "type": "Double"
        },
        {
          "data": [
            70
          ],
          "name": "AvailabilityLowLowThreshold",
          "type": "Double"
        },
        {
          "data": [
            80
          ],
          "name": "QualityLowThreshold",
          "type": "Double"
        },
        {
          "data": [
            70
          ],
          "name": "QualityLowLowThreshold",
          "type": "Double"
        },
        {
          "data": [
            80
          ],
          "name": "PerformanceLowThreshold",
          "type": "Double"
        },
        {
          "data": [
            70
          ],
          "name": "PerformanceLowLowThreshold",
          "type": "Double"
        }
      ]
    },
    "periodName": "[Custom]",
    "totalPartCount": 1244,
    "wsNameFromTagValue": null
  },
  "params": {
    "EndDateML": 1662008399000,
    "Line": "Rezum",
    "StartDateML": 1659330000000,
    "WorkstationName": "Needle Depth Setting",
    "manualLoad": 1
  },
  "propConfig": {
    "custom.DBConnection": {
      "binding": {
        "config": {
          "path": "session.custom.SpeedLayerDBConnection"
        },
        "type": "property"
      },
      "persistent": true
    },
    "custom.EndDate": {
      "binding": {
        "config": {
          "expression": "if({view.custom.EndDateParam}\u003e0,fromMillis({view.custom.EndDateParam}),now(0))"
        },
        "type": "expr"
      },
      "persistent": false
    },
    "custom.EndDateParam": {
      "binding": {
        "config": {
          "path": "view.params.EndDate"
        },
        "type": "property"
      },
      "onChange": {
        "enabled": null,
        "script": "\timport traceback\n\tlogger \u003d system.util.getLogger(\u0027OEE_Quality\u0027)\n\ttry:\n\t\tval \u003d currentValue.value\n\t\tif val \u003d\u003d None:\n\t\t\tval \u003d system.date.toMillis(system.date.now())\n\t\tself.getChild(\"root\").getChild(\"DateSelector\").props.params.endDateMs \u003d val\n\texcept:\n\t\tlogger.error(str(traceback.format_exc()))\n"
      },
      "persistent": false
    },
    "custom.FailedPartCount": {
      "binding": {
        "config": {
          "expression": "if(isNull(sum({view.custom.data},\u0027FailedPartCount\u0027)),0,sum({view.custom.data},\u0027FailedPartCount\u0027))"
        },
        "type": "expr"
      },
      "persistent": false
    },
    "custom.GoodPartCount": {
      "binding": {
        "config": {
          "expression": "if(isNull(sum({view.custom.data},\u0027GoodPartCount\u0027)),0,sum({view.custom.data},\u0027GoodPartCount\u0027))"
        },
        "type": "expr"
      },
      "persistent": false
    },
    "custom.IdealQuantity": {
      "binding": {
        "config": {
          "expression": "if(isNull({view.custom.IdealQuantityValue}),0,{view.custom.IdealQuantityValue})"
        },
        "type": "expr"
      },
      "persistent": false
    },
    "custom.IdealQuantityValue": {
      "binding": {
        "config": {
          "expression": "sum({view.custom.data},\u0027IdealPartCount\u0027)"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.LoLimit": {
      "binding": {
        "config": {
          "expression": "if(isNull({view.custom.LoLimitValue}),0,{view.custom.LoLimitValue})"
        },
        "type": "expr"
      },
      "persistent": false
    },
    "custom.LoLimitValue": {
      "binding": {
        "config": {
          "expression": "max({view.custom.limitsOEE},\u0027QualityLowThreshold\u0027)"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.LoLoLimit": {
      "binding": {
        "config": {
          "expression": "if(isNull({view.custom.LoLoLimitValue}),0,{view.custom.LoLoLimitValue})"
        },
        "type": "expr"
      }
    },
    "custom.LoLoLimitValue": {
      "binding": {
        "config": {
          "expression": "max({view.custom.limitsOEE},\u0027QualityLowLowThreshold\u0027)"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.ShiftParam": {
      "binding": {
        "config": {
          "path": "view.params.Shift"
        },
        "type": "property"
      },
      "onChange": {
        "enabled": null,
        "script": "\timport traceback\n\tlogger \u003d system.util.getLogger(\u0027OEE_Quality\u0027)\n\ttry:\n\t\tval \u003d currentValue.value\n\t\tif val \u003d\u003d None:\n\t\t\tval \u003d 5\n\t\tself.getChild(\"root\").getChild(\"DateSelector\").props.params.period \u003d val\n\texcept:\n\t\tlogger.error(str(traceback.format_exc()))\n"
      },
      "persistent": true
    },
    "custom.StartDate": {
      "binding": {
        "config": {
          "expression": "if({view.custom.StartDateParam}\u003e0,fromMillis({view.custom.StartDateParam}),now(0))"
        },
        "type": "expr"
      },
      "persistent": false
    },
    "custom.StartDateParam": {
      "binding": {
        "config": {
          "path": "view.params.StartDate"
        },
        "type": "property"
      },
      "onChange": {
        "enabled": null,
        "script": "\timport traceback\n\tlogger \u003d system.util.getLogger(\u0027OEE_Quality\u0027)\n\ttry:\n\t\tval \u003d currentValue.value\n\t\tif val \u003d\u003d None:\n\t\t\tval \u003d system.date.toMillis(system.date.now())\n\t\tself.getChild(\"root\").getChild(\"DateSelector\").props.params.startDateMs \u003d val\n\texcept:\n\t\tlogger.error(str(traceback.format_exc()))\n"
      },
      "persistent": false
    },
    "custom.Yield": {
      "binding": {
        "config": {
          "expression": "if({view.custom.totalPartCount} \u003e 0,100.0*toFloat({view.custom.GoodPartCount})/toFloat({view.custom.totalPartCount}),0)"
        },
        "type": "expr"
      },
      "persistent": false
    },
    "custom._ResourceID": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "indirect",
          "references": {
            "Line": "{view.params.Line}",
            "Plant": "{session.custom.Plant}",
            "WorkstationName": "{view.params.WorkstationName}"
          },
          "tagPath": "[default]{Plant}/{Line}/{WorkstationName}/_ResourceID"
        },
        "type": "tag"
      },
      "persistent": false
    },
    "custom.data": {
      "binding": {
        "config": {
          "parameters": {
            "database": "{view.custom.DBConnection}",
            "endTime": "{view.custom.EndDateParam}",
            "resourceId": "{view.custom._ResourceID}",
            "startTime": "{view.custom.StartDateParam}"
          },
          "polling": {
            "enabled": true,
            "rate": "15"
          },
          "queryPath": "OEE/uspGetPerformanceHourByHour"
        },
        "type": "query"
      },
      "onChange": {
        "enabled": null,
        "script": "\tpayload \u003d []\n\tsystem.perspective.sendMessage(\"QAchart\", payload,scope \u003d \"session\")\n"
      },
      "persistent": true
    },
    "custom.limitsOEE": {
      "binding": {
        "config": {
          "parameters": {
            "database": "{session.custom.SpeedLayerDBConnection}",
            "resourceId": "{view.custom._ResourceID}"
          },
          "queryPath": "OEE/uspGetOEELimits"
        },
        "type": "query"
      },
      "persistent": true
    },
    "custom.periodName": {
      "binding": {
        "config": {
          "path": "view.custom.ShiftParam"
        },
        "transforms": [
          {
            "fallback": "[Custom]",
            "inputType": "scalar",
            "mappings": [
              {
                "input": 0,
                "output": "[Current Shift]"
              },
              {
                "input": 1,
                "output": "[Current Day]"
              },
              {
                "input": 2,
                "output": "[Yesterday]"
              },
              {
                "input": 3,
                "output": "[Current Week]"
              },
              {
                "input": 4,
                "output": "[MTD]"
              }
            ],
            "outputType": "scalar",
            "type": "map"
          }
        ],
        "type": "property"
      },
      "persistent": true
    },
    "custom.totalPartCount": {
      "binding": {
        "config": {
          "expression": "{view.custom.GoodPartCount}+{view.custom.FailedPartCount}"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.wsNameFromTagValue": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "expression",
          "tagPath": "\u0027[default]\u0027 + {session.custom.Plant} + \u0027/\u0027 + {session.custom.Line}+ \u0027/\u0027 + {view.params.WorkstationName} + \u0027/WorkstationName.value\u0027"
        },
        "type": "tag"
      },
      "persistent": true
    },
    "params.EndDate": {
      "paramDirection": "input",
      "persistent": false
    },
    "params.EndDateML": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.Line": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.Shift": {
      "paramDirection": "input",
      "persistent": false
    },
    "params.StartDate": {
      "paramDirection": "input",
      "persistent": false
    },
    "params.StartDateML": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.WorkstationName": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.manualLoad": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 895,
      "width": 1101
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "Gauge"
        },
        "position": {
          "breakpoints": [
            {
              "colIndex": 0,
              "name": "sm",
              "order": 2,
              "rowIndex": 2,
              "span": 12
            },
            {
              "colIndex": 0,
              "name": "md",
              "order": 2,
              "rowIndex": 2,
              "span": 4
            },
            {
              "colIndex": 0,
              "name": "lg",
              "order": 2,
              "rowIndex": 2,
              "span": 4
            }
          ],
          "height": 342
        },
        "propConfig": {
          "props.params.LoLimit": {
            "binding": {
              "config": {
                "path": "view.custom.LoLimit"
              },
              "type": "property"
            }
          },
          "props.params.LoLimitColor": {
            "binding": {
              "config": {
                "expression": "runScript(\u0027SmartFactory.constant.YELLOW\u0027,0)"
              },
              "type": "expr"
            }
          },
          "props.params.LoLoLimit": {
            "binding": {
              "config": {
                "path": "view.custom.LoLoLimit"
              },
              "type": "property"
            }
          },
          "props.params.LoLoLimitColor": {
            "binding": {
              "config": {
                "expression": "runScript(\u0027SmartFactory.constant.RED\u0027,0)"
              },
              "type": "expr"
            }
          },
          "props.params.NominalColor": {
            "binding": {
              "config": {
                "expression": "runScript(\u0027SmartFactory.constant.GREEN\u0027,0)"
              },
              "type": "expr"
            }
          },
          "props.params.Value": {
            "binding": {
              "config": {
                "path": "view.custom.Yield"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "params": {
            "LabelText": "QUA",
            "NumberOfDecimals": 1
          },
          "path": "Templates/Pages/OEE/SimpleGaugePlus",
          "style": {
            "margin": 5
          }
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "Title"
        },
        "position": {
          "breakpoints": [
            {
              "colIndex": 0,
              "name": "sm",
              "order": 0,
              "rowIndex": 0,
              "span": 12
            },
            {
              "colIndex": 0,
              "name": "md",
              "order": 0,
              "rowIndex": 0,
              "span": 12
            },
            {
              "colIndex": 0,
              "name": "lg",
              "order": 0,
              "rowIndex": 0,
              "span": 12
            }
          ],
          "height": 43
        },
        "propConfig": {
          "props.params.feature.name": {
            "binding": {
              "config": {
                "expression": "{view.params.Line} + \u0027 - \u0027 + {view.custom.wsNameFromTagValue} + \u0027 - \u0027 + \u0027Quality\u0027"
              },
              "type": "expr"
            }
          },
          "props.params.prevParams.EndDate": {
            "binding": {
              "config": {
                "path": "view.custom.EndDateParam"
              },
              "type": "property"
            }
          },
          "props.params.prevParams.Line": {
            "binding": {
              "config": {
                "path": "view.params.Line"
              },
              "type": "property"
            }
          },
          "props.params.prevParams.Shift": {
            "binding": {
              "config": {
                "path": "view.custom.ShiftParam"
              },
              "type": "property"
            }
          },
          "props.params.prevParams.StartDate": {
            "binding": {
              "config": {
                "path": "view.custom.StartDateParam"
              },
              "type": "property"
            }
          },
          "props.params.prevParams.WorkstationName": {
            "binding": {
              "config": {
                "path": "view.params.WorkstationName"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "params": {
            "enableBackButton": 1,
            "feature": {
              "icon": "keyboard_arrow_left"
            },
            "prevParams": {},
            "previousScreenPath": "Templates/Pages/OEE/Dashboard"
          },
          "path": "Templates/Embedded/Title"
        },
        "type": "ia.display.view"
      },
      {
        "children": [
          {
            "meta": {
              "name": "RadioGroup"
            },
            "position": {
              "basis": "40px",
              "shrink": 0
            },
            "props": {
              "radios": [
                {
                  "selected": true,
                  "text": "Show Part Counts",
                  "value": "Radio button"
                },
                {
                  "selected": false,
                  "text": "Show Yield",
                  "value": ""
                }
              ]
            },
            "type": "ia.input.radio-group"
          },
          {
            "meta": {
              "name": "PieChart_PartCounts"
            },
            "position": {
              "basis": "320px",
              "grow": 1
            },
            "propConfig": {
              "props.colors[0]": {
                "binding": {
                  "config": {
                    "expression": "runScript(\u0027SmartFactory.constant.GREEN\u0027,0)"
                  },
                  "type": "expr"
                }
              },
              "props.colors[1]": {
                "binding": {
                  "config": {
                    "expression": "runScript(\u0027SmartFactory.constant.RED\u0027,0)"
                  },
                  "type": "expr"
                }
              },
              "props.data[0].count": {
                "binding": {
                  "config": {
                    "path": "view.custom.GoodPartCount"
                  },
                  "type": "property"
                }
              },
              "props.data[1].count": {
                "binding": {
                  "config": {
                    "path": "view.custom.FailedPartCount"
                  },
                  "type": "property"
                }
              },
              "props.valueFormat.showValueAsPercent": {
                "binding": {
                  "config": {
                    "path": "../RadioGroup.props.radios[1].selected"
                  },
                  "type": "property"
                }
              }
            },
            "props": {
              "colors": [
                null,
                null
              ],
              "data": [
                {
                  "name": "Good Parts"
                },
                {
                  "name": "Failed Parts"
                }
              ],
              "showLabels": false,
              "valueFormat": {}
            },
            "type": "ia.chart.pie"
          }
        ],
        "events": {
          "dom": {
            "onSelect": {
              "config": {
                "draggable": true,
                "id": "EK32ZJ8U",
                "modal": false,
                "overlayDismiss": false,
                "resizable": true,
                "showCloseIcon": true,
                "title": "Quality Hour By Hour Raw Data",
                "type": "open",
                "viewParams": {
                  "data": "{view.custom.data}"
                },
                "viewPath": "Templates/Pages/OEE/QualityHourByHour"
              },
              "scope": "C",
              "type": "popup"
            }
          }
        },
        "meta": {
          "name": "PieChart"
        },
        "position": {
          "breakpoints": [
            {
              "colIndex": 0,
              "name": "sm",
              "order": 4,
              "rowIndex": 3,
              "span": 4
            },
            {
              "colIndex": 0,
              "name": "md",
              "order": 4,
              "rowIndex": 3,
              "span": 4
            },
            {
              "colIndex": 0,
              "name": "lg",
              "order": 4,
              "rowIndex": 3,
              "span": 4
            }
          ],
          "height": "380px"
        },
        "props": {
          "alignItems": "center",
          "direction": "column",
          "justify": "space-between",
          "style": {
            "overflow": "hidden"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "meta": {
          "name": "EmbeddedView_LineCharts"
        },
        "position": {
          "breakpoints": [
            {
              "colIndex": 0,
              "name": "sm",
              "order": 3,
              "rowIndex": 3,
              "span": 12
            },
            {
              "colIndex": 4,
              "name": "md",
              "order": 3,
              "rowIndex": 2,
              "span": 8
            },
            {
              "colIndex": 4,
              "name": "lg",
              "order": 3,
              "rowIndex": 2,
              "span": 8
            }
          ],
          "height": 374
        },
        "propConfig": {
          "props.params.DBConnection": {
            "binding": {
              "config": {
                "path": "view.custom.DBConnection"
              },
              "type": "property"
            }
          },
          "props.params.EndDate": {
            "binding": {
              "config": {
                "path": "view.custom.EndDate"
              },
              "type": "property"
            }
          },
          "props.params.Line": {
            "binding": {
              "config": {
                "path": "view.params.Line"
              },
              "type": "property"
            }
          },
          "props.params.StartDate": {
            "binding": {
              "config": {
                "path": "view.custom.StartDate"
              },
              "type": "property"
            }
          },
          "props.params.WorkstationName": {
            "binding": {
              "config": {
                "path": "view.params.WorkstationName"
              },
              "type": "property"
            }
          },
          "props.params.data": {
            "binding": {
              "config": {
                "path": "view.custom.data"
              },
              "overlayOptOut": true,
              "type": "property"
            }
          }
        },
        "props": {
          "path": "Templates/Pages/OEE/LineChartContainer"
        },
        "scripts": {
          "customMethods": [
            {
              "name": "newMethod",
              "params": [],
              "script": "\t# implement your method here"
            }
          ],
          "extensionFunctions": null,
          "messageHandlers": [
            {
              "messageType": "QAchart",
              "pageScope": true,
              "script": "\t# implement your handler here\n\t\n\tself.refreshBinding(\"props.params.StartDate\")\n\t",
              "sessionScope": true,
              "viewScope": true
            }
          ]
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "DateSelector"
        },
        "position": {
          "breakpoints": [
            {
              "colIndex": 0,
              "name": "sm",
              "order": 1,
              "rowIndex": 1,
              "span": 6
            },
            {
              "colIndex": 0,
              "name": "md",
              "order": 1,
              "rowIndex": 1,
              "span": 6
            },
            {
              "colIndex": 0,
              "name": "lg",
              "order": 1,
              "rowIndex": 1,
              "span": 7
            }
          ],
          "height": 73
        },
        "propConfig": {
          "props.params.speedLayerDBConnection": {
            "binding": {
              "config": {
                "path": "session.custom.SpeedLayerDBConnection"
              },
              "type": "property"
            }
          },
          "props.params.zCode": {
            "binding": {
              "config": {
                "path": "session.custom.primaryZoneID"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "params": {
            "endDateMs": 1665589809465,
            "period": 5,
            "startDateMs": 1665589809465
          },
          "path": "Templates/Pages/OEE/DateSelector",
          "style": {
            "overflow": "hidden"
          }
        },
        "type": "ia.display.view"
      },
      {
        "children": [
          {
            "meta": {
              "name": "SpacerContainer"
            },
            "position": {
              "basis": "200px"
            },
            "props": {
              "direction": "column"
            },
            "type": "ia.container.flex"
          },
          {
            "children": [
              {
                "custom": {
                  "lastUpdate": {
                    "$": [
                      "ts",
                      192,
                      1660751413982
                    ],
                    "$ts": 1660751413982
                  }
                },
                "events": {
                  "component": {
                    "onActionPerformed": {
                      "config": {
                        "script": "\tself.custom.lastUpdate\u003dsystem.date.now()\n\tself.view.params.EndDate\u003dself.view.params.EndDateML\n\tself.view.params.StartDate\u003dself.view.params.StartDateML\n\tself.props.enabled\u003dFalse\n\tself.props.style.classes\u003d\"Button_Action_Disabled\"\n\t\n\t"
                      },
                      "scope": "G",
                      "type": "script"
                    }
                  }
                },
                "meta": {
                  "name": "LoadData",
                  "tooltip": {
                    "enabled": true
                  }
                },
                "propConfig": {
                  "meta.tooltip.text": {
                    "binding": {
                      "config": {
                        "expression": "\u0027Last update on \u0027+toStr({this.custom.lastUpdate})"
                      },
                      "type": "expr"
                    }
                  }
                },
                "props": {
                  "enabled": false,
                  "image": {
                    "style": {
                      "classes": "Button_Action_Disabled"
                    }
                  },
                  "style": {
                    "classes": "Button_Action_Disabled"
                  },
                  "text": "Load Data"
                },
                "type": "ia.input.button"
              },
              {
                "events": {
                  "component": {
                    "onActionPerformed": {
                      "config": {
                        "draggable": true,
                        "id": "ErHSkkMW",
                        "modal": false,
                        "overlayDismiss": false,
                        "resizable": true,
                        "showCloseIcon": true,
                        "title": "Quality Hour By Hour Raw Data",
                        "type": "open",
                        "viewParams": {
                          "data": "{view.custom.data}",
                          "endDate": "{view.custom.EndDate}",
                          "periodName": "{view.custom.periodName}",
                          "startDate": "{view.custom.StartDate}",
                          "wsName": "{view.params.WorkstationName}",
                          "yield": "{/root/XYChart_Yields.position.display}"
                        },
                        "viewPath": "Templates/Pages/OEE/QualityHourByHour",
                        "viewportBound": true
                      },
                      "scope": "C",
                      "type": "popup"
                    }
                  }
                },
                "meta": {
                  "name": "RawData"
                },
                "position": {
                  "grow": 1
                },
                "props": {
                  "style": {
                    "classes": "Button_Action"
                  },
                  "text": "Hour By Hour Raw Data"
                },
                "type": "ia.input.button"
              }
            ],
            "meta": {
              "name": "Buttons"
            },
            "position": {
              "basis": "200px"
            },
            "type": "ia.container.flex"
          }
        ],
        "custom": {
          "endDateMs": "value",
          "startDateMs": "value"
        },
        "meta": {
          "name": "ButtonContainer"
        },
        "position": {
          "breakpoints": [
            {
              "colIndex": 7,
              "name": "sm",
              "order": 2,
              "rowIndex": 1,
              "span": 1
            },
            {
              "colIndex": 7,
              "name": "md",
              "order": 2,
              "rowIndex": 1,
              "span": 1
            },
            {
              "colIndex": 7,
              "name": "lg",
              "order": 2,
              "rowIndex": 1,
              "span": 5
            }
          ],
          "height": 82
        },
        "propConfig": {
          "custom.endDateMs": {
            "onChange": {
              "enabled": false,
              "script": "\tif previousValue!\u003dcurrentValue:\n\t\tself.getChild(\"Buttons\").getChild(\"LoadData\").props.enabled\u003dTrue\n\t\tself.getChild(\"Buttons\").getChild(\"LoadData\").props.style.classes\u003d\"Button_Action\""
            }
          },
          "custom.startDateMs": {
            "onChange": {
              "enabled": null,
              "script": "\tif previousValue!\u003dcurrentValue:\n\t\tself.getChild(\"Buttons\").getChild(\"LoadData\").props.enabled\u003dTrue\n\t\tself.getChild(\"Buttons\").getChild(\"LoadData\").props.style.classes\u003d\"Button_Action\""
            }
          }
        },
        "props": {
          "direction": "column"
        },
        "type": "ia.container.flex"
      },
      {
        "meta": {
          "name": "Progress",
          "visible": false
        },
        "position": {
          "breakpoints": [
            {
              "colIndex": 5,
              "name": "sm",
              "order": 1,
              "rowIndex": 4,
              "span": 1
            },
            {
              "colIndex": 5,
              "name": "md",
              "order": 1,
              "rowIndex": 4,
              "span": 1
            },
            {
              "colIndex": 4,
              "name": "lg",
              "order": 4.5,
              "rowIndex": 3,
              "span": 8
            }
          ],
          "height": 30
        },
        "type": "ia.display.progress"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "breakpoints": [
        {
          "minWidth": 13,
          "name": "sm"
        },
        {
          "minWidth": 600,
          "name": "md"
        },
        {
          "minWidth": 900,
          "name": "lg"
        }
      ]
    },
    "scripts": {
      "customMethods": [],
      "extensionFunctions": null,
      "messageHandlers": [
        {
          "messageType": "oeeTimePeriodChange",
          "pageScope": true,
          "script": "\ttry:\n\t\timport traceback\n\t\tlogger \u003d system.util.getLogger(\"View:OEE/Quality oeeTimePeriodChange message handler\")\n\t\tlogger.trace(\"Entering message handler.\")\n\t\tif payload !\u003d None:\n\t\t\tself.view.params.Shift \u003d payload[\u0027timePeriod\u0027]\n\t\t\tif self.view.params.manualLoad\u003d\u003d0:\n\t\t\t\tif payload[\u0027startDateMs\u0027] !\u003d None:\n\t\t\t\t\tself.view.params.StartDate \u003d long(payload[\u0027startDateMs\u0027])\n\t\t\t\tif payload[\u0027endDateMs\u0027] !\u003d None:\n\t\t\t\t\tself.view.params.EndDate \u003d long(payload[\u0027endDateMs\u0027])\n\t\t\telse:\n\t\t\t\tif payload[\u0027startDateMs\u0027] !\u003d None:\n\t\t\t\t\tself.view.params.StartDateML \u003d long(payload[\u0027startDateMs\u0027])\n\t\t\t\tif payload[\u0027endDateMs\u0027] !\u003d None:\n\t\t\t\t\tself.view.params.EndDateML\u003d long(payload[\u0027endDateMs\u0027])\t\t\t\n\t\tlogger.trace(\"Exiting message handler.\")\n\texcept Exception, e:\n\t\tlogger.fatal(traceback.format_exc())\n",
          "sessionScope": false,
          "viewScope": false
        },
        {
          "messageType": "TimePeriodOEE",
          "pageScope": true,
          "script": "\ttry:\n\t\t\timport time\n\t\t\timport traceback\n\t\t\tlogger \u003d system.util.getLogger(\u0027View:OEE/Dashboard oeeTimePeriodChange Message Handler\u0027)\n\t\t\tlogger.trace(\"Entering message handler.\")\n\t\t\tsystem.perspective.print(\u0027msg10\u0027)\n\t\t\tif payload !\u003d None:\n\t\t\t\tself.view.params.Shift \u003d payload[\u0027timePeriod\u0027]  #Will change params.Shift, and because of the binding, custom.ShiftParam\n\t\t\tif self.view.params.manualLoad\u003d\u003d0:\n\t\t\t\tif payload[\u0027startDateMs\u0027] !\u003d None:\n\t\t\t\t\tself.view.params.StartDate \u003d long(payload[\u0027startDateMs\u0027])\n\t\t\t\tif payload[\u0027endDateMs\u0027] !\u003d None:\n\t\t\t\t\tself.view.params.EndDate \u003d long(payload[\u0027endDateMs\u0027])\n\t\t\telse:\n\t\t\t\tif payload[\u0027startDateMs\u0027] !\u003d None:\n\t\t\t\t\tself.view.params.StartDateML \u003d long(payload[\u0027startDateMs\u0027])\n\t\t\t\tif payload[\u0027endDateMs\u0027] !\u003d None:\n\t\t\t\t\tself.view.params.EndDateML\u003d long(payload[\u0027endDateMs\u0027])\t\n\t\t\ttime.sleep(1)\t\t\n\t\t\tsystem.perspective.print(\u0027msg11\u0027)\n\t\t\tlogger.trace(\"Exiting message handler.\")\n\texcept Exception, e:\n\t\tlogger.error(str(traceback.format_exc()))\n\t\tsystem.perspective.print(\u0027error2\u0027)",
          "sessionScope": true,
          "viewScope": true
        }
      ]
    },
    "type": "ia.container.column"
  }
}